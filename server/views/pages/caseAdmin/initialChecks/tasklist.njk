{% extends "layout.njk" %}
{% from "partials/assessment/personalDetails.njk" import personalDetails %}
{% from "partials/assessment/actions.njk" import actions %}
{% from "partials/assessment/tasks.njk" import tasks %}
{% from "govuk/components/task-list/macro.njk" import govukTaskList %}

{% set pageTitle = "Assess eligibility and suitability â€“ " + applicationName %}
{% set assessmentSummary = criteria.assessmentSummary %}
{% set prisonerName = [assessmentSummary.forename, assessmentSummary.surname] | join(' ') %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            {{ personalDetails(assessmentSummary) }}
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-three-quarters">
            <h2 class="govuk-heading-l govuk-!-margin-top-4">Assess eligibility and suitability</h2>
            <div class="govuk-inset-text">
                <h2 class="govuk-heading-s govuk-!-margin-bottom-2">Assessment in progress</h2>
                <p class="govuk-body">You have completed {{ completedChecks }} of {{ totalChecks }} checks</p>
            </div>
            {% include 'partials/initialChecks/outcomeBanner.njk' %}
            {% set eligiblityChecks =  [] %}
            {% for check in criteria.eligibility %}
                {% set checkRecordedOn = '' %}
                {% if check.agent.fullName %}
                    {%  set checkRecordedOn = 'Recorded on ' + check.lastUpdated | formatDate('dd MMM yyyy') + ' by ' + check.agent.fullName %}
                {% endif %}
            {% set eligiblityChecks = (eligiblityChecks.push(
                {
                    title: {
                        text: check.taskName
                    },
                    hint: {
                        text: checkRecordedOn
                    },
                    href: paths.prison.assessment.initialChecks.check | toPath({
                        prisonNumber:assessmentSummary.prisonNumber, 
                        type: 'eligibility-check',
                        checkCode: check.code 
                    }),
                    status: eligibilityChecks.eligibilityLabel(check.status)
                }
            ), eligiblityChecks) %}
            {% endfor %}

            <h2 class="govuk-!-margin-top-8">Eligibility checks</h2>
            {{ govukTaskList({
                idPrefix: "eligibility-check",
                items: eligiblityChecks,
                attributes: {
                    "data-qa": "eligibility-checks"
                }
            }) }}

            {% set suitabilityBlocked = criteria.eligibilityStatus !== 'ELIGIBLE' and criteria.suitabilityStatus === 'NOT_STARTED' %}
            {% set suitabilityChecks =  [] %}
            {% for check in criteria.suitability %}
            {% set suitabilityChecks = (suitabilityChecks.push(
                {
                    title: {
                        text: check.taskName
                    },
                    href: undefined if suitabilityBlocked else paths.prison.assessment.initialChecks.check | toPath({
                        prisonNumber:assessmentSummary.prisonNumber, 
                        type: 'suitability-check',
                        checkCode: check.code 
                    }),
                    status: eligibilityChecks.suitabilityLabel(suitabilityBlocked, check.status)
                }
            ), suitabilityChecks) %}
            {% endfor %}
            <h2>Suitability checks</h2>         
            {{ govukTaskList({
                idPrefix: "suitability-check",
                items: suitabilityChecks,
                attributes: {
                    "data-qa": "suitability-checks"
                }
            }) }}

        </div>
    </div>
{% endblock %}
