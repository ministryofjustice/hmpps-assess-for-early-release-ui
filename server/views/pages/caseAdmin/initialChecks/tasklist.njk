{% extends "layout.njk" %}
{% from "partials/assessment/personalDetails.njk" import personalDetails %}
{% from "partials/assessment/actions.njk" import actions %}
{% from "partials/assessment/tasks.njk" import tasks %}
{% from "govuk/components/task-list/macro.njk" import govukTaskList %}

{% set pageTitle = applicationName + " - Assess Offender" %}
{% set assessmentSummary = criteria.assessmentSummary %}
{% set prisonerName = [assessmentSummary.forename, assessmentSummary.surname] | join(' ') %}

{% block content %}
    <div class="govuk-grid-row govuk-body">
        <div class="govuk-grid-column-full">
            {{ personalDetails(assessmentSummary) }}
        </div>
        <div class="govuk-grid-column-full">
            <h1 class="govuk-heading-l">Assess eligibility and suitability</h1>
        </div>
        <div class="govuk-grid-column-full">

            {% include 'partials/initialChecks/outcomeBanner.njk' %}
            {% set eligiblityChecks =  [] %}
            {% for check in criteria.eligibility %}
            {% set eligiblityChecks = (eligiblityChecks.push(
                {
                    title: {
                    text: check.taskName
                    },
                    href: paths.prison.assessment.initialChecks.check | toPath({ 
                        prisonNumber:assessmentSummary.prisonNumber, 
                        type: 'eligibility',
                        checkCode: check.code 
                    }),
                    status: eligibilityChecks.eligibilityLabel(check.status)
                }
            ), eligiblityChecks) %}
            {% endfor %}

            <h2>Eligibility checks</h2>         
            {{ govukTaskList({
                idPrefix: "eligibility-check",
                items: eligiblityChecks
            }) }}

            {% set suitabilityBlocked = criteria.eligibilityStatus != 'ELIGIBLE' and suitabilityStatus === 'NOT_STARTED' %}   
            {% set suitabilityChecks =  [] %}
            {% for check in criteria.suitability %}
            {% set suitabilityChecks = (suitabilityChecks.push(
                {
                    title: {
                    text: check.taskName
                    },
                    href: undefined if suitabilityBlocked else paths.prison.assessment.initialChecks.check | toPath({ 
                        prisonNumber:assessmentSummary.prisonNumber, 
                        type: 'suitability',
                        checkCode: check.code 
                    }),
                    status: eligibilityChecks.suitabilityLabel(suitabilityBlocked, check.status)
                }
            ), suitabilityChecks) %}
            {% endfor %}
            <h2>Suitability checks</h2>         
            {{ govukTaskList({
                idPrefix: "suitability-check",
                items: suitabilityChecks
            }) }}

        </div>
    </div>
{% endblock %}
